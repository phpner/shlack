<?xml version="1.0" encoding="utf-8"?>
<modification>
  <code>phpner_product_reviews_100</code>
  <name>Phpner - Product reviews</name>
  <version>1.0.0</version>
  <author>Phpner</author>
  <link>http://phpner.net/</link>
  <file path="admin/controller/catalog/review.php">
    <operation error="skip">
      <search><![CDATA[protected function getForm() {]]></search>
      <add position="after"><![CDATA[
        // phpner_product_reviews start
        $this->load->language('catalog/phpner_product_reviews');

        $phpner_product_reviews_data = $this->config->get('phpner_product_reviews_data');
        $data['phpner_product_reviews_data'] = $phpner_product_reviews_data;

        if (isset($phpner_product_reviews_data['status']) && $phpner_product_reviews_data['status']) {
          $data['entry_positive_text'] = $this->language->get('entry_positive_text');
          $data['entry_negative_text'] = $this->language->get('entry_negative_text');
          $data['text_where_bought'] = $this->language->get('text_where_bought');
          $data['text_where_bought_yes'] = $this->language->get('text_where_bought_yes');
          $data['text_where_bought_no'] = $this->language->get('text_where_bought_no');
          $data['text_admin_answer'] = $this->language->get('text_admin_answer');
        }
        // phpner_product_reviews end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[if (isset($this->request->post['product_id'])) {]]></search>
      <add position="before"><![CDATA[
        // phpner_product_reviews start
        if (isset($phpner_product_reviews_data['status']) && $phpner_product_reviews_data['status']) {
          if (isset($this->request->post['positive_text'])) {
            $data['positive_text'] = $this->request->post['positive_text'];
          } elseif (!empty($review_info)) {
            $data['positive_text'] = $review_info['positive_text'];
          } else {
            $data['positive_text'] = '';
          }

          if (isset($this->request->post['negative_text'])) {
            $data['negative_text'] = $this->request->post['negative_text'];
          } elseif (!empty($review_info)) {
            $data['negative_text'] = $review_info['negative_text'];
          } else {
            $data['negative_text'] = '';
          }

          if (isset($this->request->post['admin_answer'])) {
            $data['admin_answer'] = $this->request->post['admin_answer'];
          } elseif (!empty($review_info)) {
            $data['admin_answer'] = $review_info['admin_answer'];
          } else {
            $data['admin_answer'] = '';
          }

          if (isset($this->request->post['where_bought'])) {
            $data['where_bought'] = $this->request->post['where_bought'];
          } elseif (!empty($review_info)) {
            $data['where_bought'] = $review_info['where_bought'];
          } else {
            $data['where_bought'] = 0;
          }
        }
        // phpner_product_reviews end
      ]]></add>
    </operation>
  </file>
  <file path="admin/model/catalog/review.php">
    <operation error="skip">
      <search><![CDATA[public function addReview($data) {]]></search>
      <add position="replace"><![CDATA[
        public function addReview($data) {
          $phpner_product_reviews_data = $this->config->get('phpner_product_reviews_data');

          $this->db->query("INSERT INTO " . DB_PREFIX . "review SET author = '" . $this->db->escape($data['author']) . "', product_id = '" . (int)$data['product_id'] . "', text = '" . $this->db->escape(strip_tags($data['text'])) . "', rating = '" . (int)$data['rating'] . "', status = '" . (int)$data['status'] . "', date_added = NOW()");

          $review_id = $this->db->getLastId();

          if (isset($phpner_product_reviews_data['status']) && $phpner_product_reviews_data['status']) {
            $this->db->query("INSERT INTO " . DB_PREFIX . "phpner_product_reviews SET review_id = '" . $review_id . "', where_bought = '" . (int)$data['where_bought'] . "', negative_text = '" . $this->db->escape(strip_tags($data['negative_text'])) . "', positive_text = '" . $this->db->escape(strip_tags($data['positive_text'])) . "', admin_answer = '" . $this->db->escape(strip_tags($data['admin_answer'])) . "'");
          }

          $this->cache->delete('product');

          return $review_id;
        }

        public function addOldReview($data) {
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[public function editReview($review_id, $data) {]]></search>
      <add position="replace"><![CDATA[
        public function editReview($review_id, $data) {
          $phpner_product_reviews_data = $this->config->get('phpner_product_reviews_data');

          $this->db->query("UPDATE " . DB_PREFIX . "review SET author = '" . $this->db->escape($data['author']) . "', product_id = '" . (int)$data['product_id'] . "', text = '" . $this->db->escape(strip_tags($data['text'])) . "', rating = '" . (int)$data['rating'] . "', status = '" . (int)$data['status'] . "', date_added = '" . $this->db->escape($data['date_added']) . "', date_modified = NOW() WHERE review_id = '" . (int)$review_id . "'");

          if (isset($phpner_product_reviews_data['status']) && $phpner_product_reviews_data['status']) {
            $query = $this->db->query("SELECT DISTINCT * FROM " . DB_PREFIX . "phpner_product_reviews WHERE review_id = '" . (int)$review_id . "'");

            if ($query->rows) {
              $this->db->query("UPDATE " . DB_PREFIX . "phpner_product_reviews SET where_bought = '" . (int)$data['where_bought'] . "', negative_text = '" . $this->db->escape(strip_tags($data['negative_text'])) . "', positive_text = '" . $this->db->escape(strip_tags($data['positive_text'])) . "', admin_answer = '" . $this->db->escape(strip_tags($data['admin_answer'])) . "' WHERE review_id = '" . (int)$review_id . "'");
            } else {
              $this->db->query("INSERT INTO " . DB_PREFIX . "phpner_product_reviews SET review_id = '" . $review_id . "', where_bought = '" . (int)$data['where_bought'] . "', negative_text = '" . $this->db->escape(strip_tags($data['negative_text'])) . "', positive_text = '" . $this->db->escape(strip_tags($data['positive_text'])) . "', admin_answer = '" . $this->db->escape(strip_tags($data['admin_answer'])) . "'");
            }
          }

          $this->cache->delete('product');
        }

        public function editOldReview($review_id, $data) {
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[public function getReview($review_id) {]]></search>
      <add position="replace"><![CDATA[
        public function getReview($review_id) {
          $phpner_product_reviews_data = $this->config->get('phpner_product_reviews_data');
          
          if (isset($phpner_product_reviews_data['status']) && $phpner_product_reviews_data['status']) {
            $query = $this->db->query("SELECT DISTINCT r.*, opr.positive_text, opr.negative_text, opr.admin_answer, opr.where_bought, (SELECT pd.name FROM " . DB_PREFIX . "product_description pd WHERE pd.product_id = r.product_id AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "') AS product FROM " . DB_PREFIX . "review r LEFT JOIN " . DB_PREFIX . "phpner_product_reviews opr ON (r.review_id = opr.review_id) WHERE r.review_id = '" . (int)$review_id . "'");
          } else {
            $query = $this->db->query("SELECT DISTINCT *, (SELECT pd.name FROM " . DB_PREFIX . "product_description pd WHERE pd.product_id = r.product_id AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "') AS product FROM " . DB_PREFIX . "review r WHERE r.review_id = '" . (int)$review_id . "'");
          }

          return $query->row;
        }

        public function getOldReview($review_id) {
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$this->db->query("DELETE FROM " . DB_PREFIX . "review WHERE review_id = '" . (int)$review_id . "'");]]></search>
      <add position="after"><![CDATA[
        // phpner_product_reviews start
        $phpner_product_reviews_data = $this->config->get('phpner_product_reviews_data');

        if (isset($phpner_product_reviews_data['status']) && $phpner_product_reviews_data['status']) {
          $this->db->query("DELETE FROM " . DB_PREFIX . "phpner_product_reviews WHERE review_id = '" . (int)$review_id . "'");
          $this->db->query("DELETE FROM " . DB_PREFIX . "phpner_product_reviews_reputation WHERE review_id = '" . (int)$review_id . "'");
        }
        // phpner_product_reviews end
      ]]></add>
    </operation>
  </file>
  <file path="admin/view/template/catalog/review_form.tpl">
    <operation error="skip">
      <search><![CDATA[<form action="<?php echo $action; ?>" method="post" enctype="multipart/form-data" id="form-review" class="form-horizontal">]]></search>
      <add position="after"><![CDATA[
        <?php if (isset($phpner_product_reviews_data['status']) && $phpner_product_reviews_data['status']) { ?>
        <div class="form-group">
          <label class="col-sm-2 control-label" for="input-positive_text"><?php echo $entry_positive_text; ?></label>
          <div class="col-sm-10">
            <textarea name="positive_text" cols="60" rows="8" placeholder="<?php echo $entry_text; ?>" id="input-positive_text" class="form-control"><?php echo $positive_text; ?></textarea>
          </div>
        </div>
        <div class="form-group">
          <label class="col-sm-2 control-label" for="input-negative_text"><?php echo $entry_negative_text; ?></label>
          <div class="col-sm-10">
            <textarea name="negative_text" cols="60" rows="8" placeholder="<?php echo $entry_text; ?>" id="input-negative_text" class="form-control"><?php echo $negative_text; ?></textarea>
          </div>
        </div>
        <div class="form-group">
          <label class="col-sm-2 control-label" for="input-admin_answer"><?php echo $text_admin_answer; ?></label>
          <div class="col-sm-10">
            <textarea name="admin_answer" cols="60" rows="8" placeholder="<?php echo $entry_text; ?>" id="input-admin_answer" class="form-control"><?php echo $admin_answer; ?></textarea>
          </div>
        </div>
        <div class="form-group" style="display: none;">
          <label class="col-sm-2 control-label" for="input-where_bought"><?php echo $text_where_bought; ?></label>
          <div class="col-sm-10">
            <select name="where_bought" id="input-where_bought" class="form-control">
              <?php if ($where_bought) { ?>
              <option value="1" selected="selected"><?php echo $text_where_bought_yes; ?></option>
              <option value="0"><?php echo $text_where_bought_no; ?></option>
              <?php } else { ?>
              <option value="1"><?php echo $text_where_bought_yes; ?></option>
              <option value="0" selected="selected"><?php echo $text_where_bought_no; ?></option>
              <?php } ?>
            </select>
          </div>
        </div>
        <?php } ?>
      ]]></add>
    </operation>
  </file>
  <file path="catalog/controller/product/product.php">
    <operation error="skip">
      <search><![CDATA[public function index() {]]></search>
      <add position="after"><![CDATA[
        // phpner_product_reviews start
        $this->load->language('extension/module/phpner_product_reviews');

        $data['phpner_product_reviews_data'] = $this->config->get('phpner_product_reviews_data');

        $data['entry_positive_text'] = $this->language->get('entry_positive_text');
        $data['entry_negative_text'] = $this->language->get('entry_negative_text');
        $data['text_where_bought'] = $this->language->get('text_where_bought');
        $data['text_where_bought_yes'] = $this->language->get('text_where_bought_yes');
        $data['text_where_bought_no'] = $this->language->get('text_where_bought_no');
        // phpner_product_reviews end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$data['text_no_reviews'] = $this->language->get('text_no_reviews');]]></search>
      <add position="after"><![CDATA[
        // phpner_product_reviews start
        $this->load->language('extension/module/phpner_product_reviews');

        $phpner_product_reviews_data = $this->config->get('phpner_product_reviews_data');

        $data['entry_positive_text'] = $this->language->get('entry_positive_text');
        $data['entry_negative_text'] = $this->language->get('entry_negative_text');
        $data['text_where_bought'] = $this->language->get('text_where_bought');
        $data['text_where_bought_yes'] = $this->language->get('text_where_bought_yes');
        $data['text_where_bought_no'] = $this->language->get('text_where_bought_no');
        $data['text_admin_answer'] = $this->language->get('text_admin_answer');
        $data['text_my_assessment'] = $this->language->get('text_my_assessment');
        // phpner_product_reviews end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$data['reviews'][] = array(]]></search>
      <add position="before"><![CDATA[
        // phpner_product_reviews start
        if (isset($phpner_product_reviews_data['status']) && $phpner_product_reviews_data['status']) {
          $positive_text = html_entity_decode($result['positive_text'], ENT_QUOTES, 'UTF-8');
          $negative_text = html_entity_decode($result['negative_text'], ENT_QUOTES, 'UTF-8');
          $admin_answer = html_entity_decode($result['admin_answer'], ENT_QUOTES, 'UTF-8');
          $plus_reputation = (int)$result['plus_reputation'];
          $minus_reputation = (int)$result['minus_reputation'];
          $where_bought = ($result['where_bought']) ? $this->language->get('text_where_bought_yes') : $this->language->get('text_where_bought_no');
        } else {
          $positive_text = '';
          $negative_text = '';
          $admin_answer = '';
          $plus_reputation = FALSE;
          $minus_reputation = FALSE;
          $where_bought = FALSE;
        }
        // phpner_product_reviews end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$data['reviews'][] = array(]]></search>
      <add position="after"><![CDATA[
        // phpner_product_reviews start
        'review_id'        => $result['review_id'],
        'positive_text'    => $positive_text,
        'negative_text'    => $negative_text,
        'admin_answer'     => $admin_answer,
        'plus_reputation'  => $plus_reputation,
        'minus_reputation' => $minus_reputation,
        'where_bought'     => $where_bought,
        // phpner_product_reviews end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[public function review() {]]></search>
      <add position="after"><![CDATA[
        // phpner_product_reviews start
        $data['phpner_product_reviews_data'] = $this->config->get('phpner_product_reviews_data');
        // phpner_product_reviews end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[public function review() {]]></search>
      <add position="before"><![CDATA[
        // phpner_product_reviews start
        public function phpner_review_reputation() {
          $json = array();

          $this->load->language('extension/module/phpner_product_reviews');

          if (isset($this->request->get['review_id']) && isset($this->request->get['reputation_type'])) {

            $this->load->model('catalog/review');

            $check_ip = $this->model_catalog_review->checkphpner_UserIp($this->request->server['REMOTE_ADDR'], $this->request->get['review_id']);

            if ($check_ip) {
              $json['error'] = $this->language->get('error_ip_exist');
            }
            
            if (!isset($json['error'])) {

              $filter_data = array(
                'review_id' => (int)$this->request->get['review_id'],
                'ip' => $this->request->server['REMOTE_ADDR'],
                'reputation_type' => (int)$this->request->get['reputation_type']
              );

              $this->model_catalog_review->addphpner_ProductReputation($filter_data);

              $json['success'] = $this->language->get('text_success');
            }
          }

          $this->response->addHeader('Content-Type: application/json');
          $this->response->setOutput(json_encode($json));
        }
        // phpner_product_reviews end
      ]]></add>
    </operation>
  </file>
  <file path="catalog/model/catalog/review.php">
    <operation error="skip">
      <search><![CDATA[$review_id = $this->db->getLastId();]]></search>
      <add position="after"><![CDATA[
        // phpner_product_reviews start
        $phpner_product_reviews_data = $this->config->get('phpner_product_reviews_data');

        if (isset($phpner_product_reviews_data['status']) && $phpner_product_reviews_data['status']) {
          $this->db->query("INSERT INTO " . DB_PREFIX . "phpner_product_reviews SET review_id = '" . (int)$review_id . "', where_bought = '" . (int)$data['where_bought'] . "', positive_text = '" . $this->db->escape($data['positive_text']) . "', negative_text = '" . $this->db->escape($data['negative_text']) . "'");
        }
        // phpner_product_reviews end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[public function getReviewsByProductId($product_id, $start = 0, $limit = 20) {]]></search>
      <add position="replace"><![CDATA[
        public function checkphpner_UserIp($ip, $review_id) {
          $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "phpner_product_reviews_reputation WHERE ip = '" . $this->db->escape($ip) . "' AND review_id = '" . (int)$review_id . "'");

          return $query->rows;
        }

        public function addphpner_ProductReputation($data = array()) {
          $sql = "INSERT INTO " . DB_PREFIX . "phpner_product_reviews_reputation SET review_id = '" . (int)$data['review_id'] . "', ip = '" . $this->db->escape($data['ip']) . "'";

          if ($data['reputation_type'] == 1) {
            $sql .= ", plus_reputation = (plus_reputation + 1)";
          }

          if ($data['reputation_type'] == 2) {
            $sql .= ", minus_reputation = (minus_reputation + 1)";
          }

          $this->db->query($sql);
        }

        public function getReviewsByProductId($product_id, $start = 0, $limit = 20) {
          $phpner_product_reviews_data = $this->config->get('phpner_product_reviews_data');

          if ($start < 0) {
            $start = 0;
          }

          if ($limit < 1) {
            $limit = 20;
          }

          $sql = "SELECT r.review_id, r.author, r.rating, r.text, p.product_id, pd.name, p.price, p.image, r.date_added ";

          if (isset($phpner_product_reviews_data['status']) && $phpner_product_reviews_data['status']) {
            $sql .= ", opr.positive_text, opr.negative_text, opr.admin_answer, opr.where_bought, SUM(oprr.plus_reputation) AS `plus_reputation`, SUM(oprr.minus_reputation) AS `minus_reputation` ";
          }

          $sql .= "FROM " . DB_PREFIX . "review r LEFT JOIN " . DB_PREFIX . "product p ON (r.product_id = p.product_id) LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) ";

          if (isset($phpner_product_reviews_data['status']) && $phpner_product_reviews_data['status']) {
            $sql .= "LEFT JOIN " . DB_PREFIX . "phpner_product_reviews opr ON (r.review_id = opr.review_id) LEFT JOIN " . DB_PREFIX . "phpner_product_reviews_reputation oprr ON (r.review_id = oprr.review_id) ";
          }

          $sql .= "WHERE p.product_id = '" . (int)$product_id . "' AND p.date_available <= NOW() AND p.status = '1' AND r.status = '1' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "' GROUP BY r.review_id ORDER BY r.date_added DESC LIMIT " . (int)$start . "," . (int)$limit;
          
          $query = $this->db->query($sql);

          return $query->rows;
        }

        public function getOldReviewsByProductId($product_id, $start = 0, $limit = 20) {
      ]]></add>
    </operation>
  </file>
</modification>