<?xml version="1.0" encoding="utf-8"?>
<modification>
  <code>phpner_advanced_options_settings_100</code>
  <name>Phpner - Advanced options settings</name>
  <version>1.0.0</version>
  <author>Phpner</author>
  <link>http://phpner.net/</link>
  <!-- admin actions -->
  <file path="admin/controller/catalog/option.php">
    <operation error="skip">
      <search><![CDATA[protected function getForm() {]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $data['phpner_advanced_options_settings_data'] = $this->config->get('phpner_advanced_options_settings_data');
        $data['text_phpner_quantity'] = $this->language->get('text_phpner_quantity');
        $data['text_phpner_quantity_simple'] = $this->language->get('text_phpner_quantity_simple');
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[public function autocomplete() {]]></search>
      <add position="after"><![CDATA[
        $phpner_advanced_options_settings_data = $this->config->get('phpner_advanced_options_settings_data');
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$option['type'] == 'image']]></search>
      <add position="replace"><![CDATA[$option['type'] == 'image' || ($option['type'] == 'phpner_quantity' && isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status'] && $phpner_advanced_options_settings_data['quantity_status'])
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[if ($option['type'] == 'select' || $option['type'] == 'radio' || $option['type'] == 'checkbox') {]]></search>
      <add position="before"><![CDATA[
        if ($option['type'] == 'phpner_quantity' && isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status'] && $phpner_advanced_options_settings_data['quantity_status']) {
          $type = $this->language->get('text_phpner_quantity');
        }
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$json[] = array(]]></search>
      <add position="replace" offset="6"><![CDATA[
        if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status'] && $phpner_advanced_options_settings_data['quantity_status']) {
          $json[] = array(
            'option_id'    => $option['option_id'],
            'name'         => strip_tags(html_entity_decode($option['name'], ENT_QUOTES, 'UTF-8')),
            'category'     => $type,
            'type'         => $option['type'],
            'option_value' => $option_value_data
          );
        } else {
          if ($option['type'] != 'phpner_quantity') {
            $json[] = array(
              'option_id'    => $option['option_id'],
              'name'         => strip_tags(html_entity_decode($option['name'], ENT_QUOTES, 'UTF-8')),
              'category'     => $type,
              'type'         => $option['type'],
              'option_value' => $option_value_data
            );
          }
        }
      ]]></add>
    </operation>
  </file>
  <file path="admin/controller/catalog/product.php">
    <operation error="skip">
      <search><![CDATA[$data['entry_option'] = $this->language->get('entry_option');]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $data['entry_option_sku'] = $this->language->get('entry_option_sku');
        $data['entry_option_model'] = $this->language->get('entry_option_model');
        $data['entry_option_image'] = $this->language->get('entry_option_image');
        $data['phpner_advanced_options_settings_data'] = $phpner_advanced_options_settings_data = $this->config->get('phpner_advanced_options_settings_data');
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[foreach ($product_images as $product_image) {]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) {
          @$image_by_option = $this->model_catalog_product->getProductOptionsToImage($this->request->get['product_id'], $product_image['product_image_id']);
        } else {
          $image_by_option = array();
        }
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$data['product_options'] = array();]]></search>
      <add position="before"><![CDATA[
        // phpner_advanced_options_settings start
        $this->load->model('tool/image');
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[if (isset($this->request->get['filter_name']) || isset($this->request->get['filter_model'])) {]]></search>
      <add position="before"><![CDATA[
        // phpner_advanced_options_settings start
        $this->load->model('tool/image');
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA['thumb'      => $this->model_tool_image->resize($thumb, 100, 100),]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        'image_by_option' => $image_by_option,
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$product_option_value_data[] = array(]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        'sku' => (isset($product_option_value['sku'])) ? $product_option_value['sku'] : '',
        'model' => (isset($product_option_value['model'])) ? $product_option_value['model'] : '',
        'image' => (isset($product_option_value['image'])) ? $product_option_value['image'] : '',
        'thumb' => (isset($product_option_value['image']) && is_file(DIR_IMAGE.$product_option_value['image'])) ? $this->model_tool_image->resize($product_option_value['image'], 100, 100) : $this->model_tool_image->resize('no_image.png', 100, 100),
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$product_option['type'] == 'checkbox']]></search>
      <add position="replace"><![CDATA[
        $product_option['type'] == 'checkbox' || $product_option['type'] == 'phpner_quantity'
      ]]></add>
    </operation>
  </file>
  <file path="admin/language/ru-ru/catalog/product.php">
    <operation error="skip">
      <search><![CDATA[<?php]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $_['entry_option_sku'] = 'Артикул';
        $_['entry_option_model'] = 'Модель';
        $_['entry_option_image'] = 'Изображение';
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="admin/language/ru-ru/catalog/option.php">
    <operation error="skip">
      <search><![CDATA[<?php]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $_['text_phpner_quantity'] = 'Доступен ввод количества';
        $_['text_phpner_quantity_simple'] = 'Ввод количества';
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="admin/model/catalog/product.php">
    <operation error="skip">
      <search><![CDATA[$product_option['type'] == 'image']]></search>
      <add position="replace"><![CDATA[
        $product_option['type'] == 'image' || $product_option['type'] == 'phpner_quantity'
      ]]></add>
    </operation>
    <operation error="skip">
      <search index="0"><![CDATA[$this->db->query("DELETE FROM " . DB_PREFIX . "product_image WHERE product_id = '" . (int)$product_id . "'");]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $phpner_advanced_options_settings_data = $this->config->get('phpner_advanced_options_settings_data');
        if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) {
          $this->db->query("DELETE FROM " . DB_PREFIX . "phpner_product_image_by_option WHERE product_id = '" . (int)$product_id . "'");
        }
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search index="1"><![CDATA[$this->db->query("INSERT INTO " . DB_PREFIX . "product_image SET product_id = '" . (int)$product_id . "', image = '" . $this->db->escape($product_image['image']) . "', sort_order = '" . (int)$product_image['sort_order'] . "'");]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) {
          $product_image_id = $this->db->getLastId();
          if (isset($product_image['image_by_option'])) {
            foreach ($product_image['image_by_option'] as $option_value_id) {
              $this->db->query("INSERT INTO " . DB_PREFIX . "phpner_product_image_by_option SET product_id = '" . (int)$product_id . "', product_image_id = '" . (int)$product_image_id . "', option_value_id = '" . (int)$option_value_id . "'");
            }
          }
        }
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search index="1"><![CDATA[$this->db->query("DELETE FROM " . DB_PREFIX . "product_image WHERE product_id = '" . (int)$product_id . "'");]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $phpner_advanced_options_settings_data = $this->config->get('phpner_advanced_options_settings_data');
        if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) {
          $this->db->query("DELETE FROM " . DB_PREFIX . "phpner_product_image_by_option WHERE product_id = '" . (int)$product_id . "'");
        }
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[public function copyProduct($product_id) {]]></search>
      <add position="before"><![CDATA[
        // phpner_advanced_options_settings start
        public function getProductOptionsToImage($product_id, $product_image_id) {
          $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "phpner_product_image_by_option WHERE product_id = '" . (int)$product_id . "' AND product_image_id = '" . (int)$product_image_id . "'");
          $option_value_id_data = array();
          if ($query->rows) {
            foreach ($query->rows as $row) {
              $option_value_id_data[] = $row['option_value_id'];
            }
          }
          return $option_value_id_data;
        }
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[weight_prefix = '" . $this->db->escape($product_option_value['weight_prefix']) . "'");]]></search>
      <add position="replace"><![CDATA[
        sku = '" . $this->db->escape(isset($product_option_value['sku']) ? $product_option_value['sku'] : '') . "', model = '" . $this->db->escape(isset($product_option_value['model']) ? $product_option_value['model'] : '') . "', o_v_image = '" . $this->db->escape(isset($product_option_value['image']) ? $product_option_value['image'] : '') . "', weight_prefix = '" . $this->db->escape($product_option_value['weight_prefix']) . "'");
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$product_option_value_data[] = array(]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        'sku' => (isset($product_option_value['sku'])) ? $product_option_value['sku'] : '',
        'model' => (isset($product_option_value['model'])) ? $product_option_value['model'] : '',
        'image' => (isset($product_option_value['o_v_image'])) ? $product_option_value['o_v_image'] : '',
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="admin/view/template/catalog/option_form.tpl">
    <operation error="skip">
      <search><![CDATA[<optgroup label="<?php echo $text_file; ?>">]]></search>
      <add position="before"><![CDATA[
        <?php if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status'] && $phpner_advanced_options_settings_data['quantity_status']) { ?>
          <optgroup label="<?php echo $text_phpner_quantity; ?>">
          <?php if ($type == 'phpner_quantity') { ?>
          <option value="phpner_quantity" selected="selected"><?php echo $text_phpner_quantity_simple; ?></option>
          <?php } else { ?>
          <option value="phpner_quantity"><?php echo $text_phpner_quantity_simple; ?></option>
          <?php } ?>
          </optgroup>
        <?php } ?>
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[if (this.value == 'select' || this.value == 'radio' || this.value == 'checkbox' || this.value == 'image') {]]></search>
      <add position="replace"><![CDATA[
        <?php if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status'] && $phpner_advanced_options_settings_data['quantity_status']) { ?>
          // phpner_advanced_options_settings start
          if (this.value == 'select' || this.value == 'radio' || this.value == 'checkbox' || this.value == 'image' || this.value == 'phpner_quantity') {
          // phpner_advanced_options_settings end
        <?php } else { ?>
          if (this.value == 'select' || this.value == 'radio' || this.value == 'checkbox' || this.value == 'image') {
        <?php } ?>
      ]]></add>
    </operation>
  </file>
  <file path="admin/view/template/catalog/product_form.tpl">
    <operation error="skip">
      <search><![CDATA[$product_option['type'] == 'image']]></search>
      <add position="replace"><![CDATA[$product_option['type'] == 'image' || $product_option['type'] == 'phpner_quantity']]></add>
    </operation>
    <operation error="skip">
      <search index="0"><![CDATA[<td class="text-left"><?php echo $entry_subtract; ?></td>]]></search>
      <add position="after"><![CDATA[
        <?php if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) { ?>
          <?php if ($phpner_advanced_options_settings_data['allow_sku']) { ?><td class="text-left"><?php echo $entry_option_sku; ?></td><?php } ?>
          <?php if ($phpner_advanced_options_settings_data['allow_model']) { ?><td class="text-left"><?php echo $entry_option_model; ?></td><?php } ?>
          <?php if ($phpner_advanced_options_settings_data['quantity_status']) { ?><td class="text-left"><?php echo $entry_option_image; ?></td><?php } ?>
        <?php } ?>
      ]]></add>
    </operation>
    <operation error="skip">
      <search  index="0"><![CDATA[<td colspan="6"></td>]]></search>
      <add position="replace"><![CDATA[
        <?php if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) { ?>
	        <?php $phpner_result_row_add = 6; ?>
	        <?php if ($phpner_advanced_options_settings_data['allow_sku']) { ?>
						<?php $phpner_result_row_add = $phpner_result_row_add + 1; ?>
					<?php } ?>
					<?php if ($phpner_advanced_options_settings_data['allow_model']) { ?>
						<?php $phpner_result_row_add = $phpner_result_row_add + 1; ?>
					<?php } ?>
					<?php if ($phpner_advanced_options_settings_data['quantity_status']) { ?>
						<?php $phpner_result_row_add = $phpner_result_row_add + 1; ?>
					<?php } ?>
					<td colspan="<?php echo $phpner_result_row_add; ?>"></td>
        <?php } else { ?>
        <td colspan="6"></td>
        <?php } ?>
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[html += '        <td class="text-left"><?php echo $entry_subtract; ?></td>';]]></search>
      <add position="after"><![CDATA[
        <?php if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) { ?>
          <?php if ($phpner_advanced_options_settings_data['allow_sku']) { ?>html += '        <td class="text-left"><?php echo $entry_option_sku; ?></td>';<?php } ?>
          <?php if ($phpner_advanced_options_settings_data['allow_model']) { ?>html += '        <td class="text-left"><?php echo $entry_option_model; ?></td>';<?php } ?>
          <?php if ($phpner_advanced_options_settings_data['quantity_status']) { ?>html += '        <td class="text-left"><?php echo $entry_option_image; ?></td>';<?php } ?>
        <?php } ?>
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[html += '        <td colspan="6"></td>';]]></search>
      <add position="replace"><![CDATA[
        <?php if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) { ?>
          <?php $phpner_result_row_add = 6; ?>
	        <?php if ($phpner_advanced_options_settings_data['allow_sku']) { ?>
						<?php $phpner_result_row_add = $phpner_result_row_add + 1; ?>
					<?php } ?>
					<?php if ($phpner_advanced_options_settings_data['allow_model']) { ?>
						<?php $phpner_result_row_add = $phpner_result_row_add + 1; ?>
					<?php } ?>
					<?php if ($phpner_advanced_options_settings_data['quantity_status']) { ?>
						<?php $phpner_result_row_add = $phpner_result_row_add + 1; ?>
					<?php } ?>
					html += '        <td colspan="<?php echo $phpner_result_row_add; ?>"></td>';
        <?php } else { ?>
          html += '        <td colspan="6"></td>';
        <?php } ?>
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[<td class="text-right"><select name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][price_prefix]" class="form-control">]]></search>
      <add position="before"><![CDATA[
        <?php if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) { ?>
          <?php if ($phpner_advanced_options_settings_data['allow_sku']) { ?><td class="text-right"><input type="text" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][sku]" value="<?php echo $product_option_value['sku']; ?>" placeholder="<?php echo $entry_option_sku; ?>" class="form-control" /></td><?php } ?>
          <?php if ($phpner_advanced_options_settings_data['allow_model']) { ?><td class="text-right"><input type="text" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][model]" value="<?php echo $product_option_value['model']; ?>" placeholder="<?php echo $entry_option_model; ?>" class="form-control" /></td><?php } ?>
          <?php if ($phpner_advanced_options_settings_data['quantity_status']) { ?>
          <td class="text-left">
            <a href="" id="thumb-image<?php echo $option_row; ?>-<?php echo $option_value_row; ?>" data-toggle="image" class="img-thumbnail"><img class="img-responsive" src="<?php echo $product_option_value['thumb']; ?>" alt="" title="" data-placeholder="<?php echo $placeholder; ?>" /></a>
            <input type="hidden" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][image]" value="<?php echo $product_option_value['image']; ?>" id="input-image<?php echo $option_row; ?>-<?php echo $option_value_row; ?>" />
          </td>
          <?php } ?>
        <?php } ?>
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[html += '  <td class="text-right"><select name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][price_prefix]" class="form-control">';]]></search>
      <add position="before"><![CDATA[
        <?php if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) { ?>
          <?php if ($phpner_advanced_options_settings_data['allow_sku']) { ?>html += '  <td class="text-right"><input type="text" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][sku]" value="" placeholder="<?php echo $entry_option_sku; ?>" class="form-control" /></td>';<?php } ?>
          <?php if ($phpner_advanced_options_settings_data['allow_model']) { ?>html += '  <td class="text-right"><input type="text" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][model]" value="" placeholder="<?php echo $entry_option_model; ?>" class="form-control" /></td>';<?php } ?>
          <?php if ($phpner_advanced_options_settings_data['quantity_status']) { ?>html += '  <td class="text-left"><a href="" id="thumb-image' + option_row + '-' + option_value_row + '" data-toggle="image" class="img-thumbnail"><img src="<?php echo $placeholder; ?>" alt="" title="" data-placeholder="<?php echo $placeholder; ?>" /></a><input type="hidden" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][image]" value="" id="input-image' + option_row + '-' + option_value_row + '" /></td>';<?php } ?>
        <?php } ?>
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[item['type'] == 'image']]></search>
      <add position="replace"><![CDATA[item['type'] == 'image' || item['type'] == 'phpner_quantity']]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[<td class="text-left"><?php echo $entry_image; ?></td>]]></search>
      <add position="after"><![CDATA[
        <?php if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) { ?>
          <!-- phpner_advanced_options_settings start -->
          <td class="text-left"><?php echo $entry_option_value; ?></td>
          <!-- phpner_advanced_options_settings end -->
        <?php } ?>
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[<td class="text-right"><input type="text" name="product_image[<?php echo $image_row; ?>][sort_order]" value="<?php echo $product_image['sort_order']; ?>" placeholder="<?php echo $entry_sort_order; ?>" class="form-control" /></td>]]></search>
      <add position="before"><![CDATA[
        <?php if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) { ?>
        <!-- phpner_advanced_options_settings start -->
          <td class="text-right">
            <?php asort($product_options); foreach ($product_options as $product_option) { ?>
              <?php if ($product_option['type'] == 'radio' || $product_option['type'] == 'checkbox' || $product_option['type'] == 'select') { ?>
                <div class="col-sm-6 col-md-6 col-lg-6">
                  <div class="well well-sm" style="height: 130px; overflow: auto;text-align:left;margin-bottom:4px;">
                    <?php if (isset($option_values[$product_option['option_id']])) { ?>
                      <?php foreach ($option_values[$product_option['option_id']] as $option_value) { ?>  
                        <label>
                        <?php if (in_array($option_value['option_value_id'], $product_image['image_by_option'])) { ?>
                          <input type="checkbox" name="product_image[<?php echo $image_row; ?>][image_by_option][]" value="<?php echo $option_value['option_value_id']; ?>" checked="checked"/> <?php echo $product_option['name']; ?> > <?php echo $option_value['name']; ?></label>
                        <?php } else { ?>
                          <input type="checkbox" name="product_image[<?php echo $image_row; ?>][image_by_option][]" value="<?php echo $option_value['option_value_id']; ?>" /> <?php echo $product_option['name']; ?> > <?php echo $option_value['name']; ?></label>
                        <?php } ?>
                        <br/>
                      <?php } ?>
                    <?php } ?>
                  </div>
                </div>
              <?php } ?>
            <?php } ?>
          </td>
          <!-- phpner_advanced_options_settings end -->
        <?php } ?>
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[html += '  <td class="text-right"><input type="text" name="product_image[' + image_row + '][sort_order]" value="" placeholder="<?php echo $entry_sort_order; ?>" class="form-control" /></td>';]]></search>
      <add position="before"><![CDATA[
        <?php if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) { ?>
        // phpner_advanced_options_settings start
          html += '  <td class="text-right">';
            <?php asort($product_options); foreach ($product_options as $product_option) { ?>
              <?php if ($product_option['type'] == 'radio' || $product_option['type'] == 'checkbox' || $product_option['type'] == 'select') { ?>
          html += '    <div class="col-sm-6 col-md-6 col-lg-6">';
          html += '      <div class="well well-sm" style="height: 130px; overflow: auto;text-align:left;margin-bottom:4px;">';
                            <?php if (isset($option_values[$product_option['option_id']])) { ?>
                              <?php foreach ($option_values[$product_option['option_id']] as $option_value) { ?>  
          html += '            <label><input type="checkbox" name="product_image[' + image_row + '][image_by_option][]" value="<?php echo $option_value['option_value_id']; ?>" /> <?php echo $product_option['name']; ?> > <?php echo $option_value['name']; ?></label><br/>';
                              <?php } ?>
                            <?php } ?>
          html += '      </div>';
          html += '    </div>';
              <?php } ?>
            <?php } ?>
          html += '  </td>';
          // phpner_advanced_options_settings end
        <?php } ?>
      ]]></add>
    </operation>
  </file>
  <file path="admin/controller/sale/order.php">
    <operation error="skip">
      <search><![CDATA[public function info() {]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $data['phpner_advanced_options_settings_data'] = $this->config->get('phpner_advanced_options_settings_data');
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$data['direction'] = $this->language->get('direction');]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $data['phpner_advanced_options_settings_data'] = $this->config->get('phpner_advanced_options_settings_data');
        $data['text_phpner_option_sku'] = $this->language->get('text_phpner_option_sku');
        $data['text_phpner_option_model'] = $this->language->get('text_phpner_option_model');
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$option_data[] = array(]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        'sku'  => (isset($option['sku'])) ? $option['sku'] : '',
        'model'  => (isset($option['model'])) ? $option['model'] : '',
        'type'   => $option['type'],
        'phpner_quantity_value'  => (isset($option['phpner_quantity_value'])) ? $option['phpner_quantity_value'] : '',
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$data['text_customer_detail'] = $this->language->get('text_customer_detail');]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $data['text_phpner_option_sku'] = $this->language->get('text_phpner_option_sku');
        $data['text_phpner_option_model'] = $this->language->get('text_phpner_option_model');
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="admin/language/ru-ru/sale/order.php">
    <operation error="skip">
      <search><![CDATA[<?php]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $_['text_phpner_option_sku'] = 'Артикул';
        $_['text_phpner_option_model'] = 'Модель';
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="admin/view/template/sale/order_info.tpl">
    <operation error="skip">
      <search><![CDATA[<small> - <?php echo $option['name']; ?>: <?php echo $option['value']; ?></small>]]></search>
      <add position="replace"><![CDATA[
        <?php if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) { ?>
          <small> - <?php echo $option['name']; ?>: <?php echo $option['value']; ?>
          <?php if ($option['type'] == 'phpner_quantity' && $phpner_advanced_options_settings_data['quantity_status'] && isset($option['phpner_quantity_value']) && $option['phpner_quantity_value']) { ?>
            x<?php echo $option['phpner_quantity_value']; ?>
          <?php } ?>
          <?php if (($phpner_advanced_options_settings_data['allow_sku'] && $option['sku']) || ($phpner_advanced_options_settings_data['allow_model'] && $option['model'])) { ?>(<?php if ($phpner_advanced_options_settings_data['allow_sku'] && $option['sku']) { ?><?php echo $text_phpner_option_sku; ?>: <?php echo $option['sku']; ?>, <?php } ?><?php if ($phpner_advanced_options_settings_data['allow_model'] && $option['model']) { ?><?php echo $text_phpner_option_model; ?>: <?php echo $option['model']; ?><?php } ?>)
          <?php } ?>
          </small>
        <?php } else { ?>
        <small> - <?php echo $option['name']; ?>: <?php echo $option['value']; ?></small>
        <?php } ?>
      ]]></add>
    </operation>
  </file>
  <file path="admin/view/template/sale/order_invoice.tpl">
    <operation error="skip">
      <search><![CDATA[<small> - <?php echo $option['name']; ?>: <?php echo $option['value']; ?></small>]]></search>
      <add position="replace"><![CDATA[
        <?php if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) { ?>
          <small> - <?php echo $option['name']; ?>: <?php echo $option['value']; ?>
          <?php if ($option['type'] == 'phpner_quantity' && $phpner_advanced_options_settings_data['quantity_status'] && isset($option['phpner_quantity_value']) && $option['phpner_quantity_value']) { ?>
            x<?php echo $option['phpner_quantity_value']; ?>
          <?php } ?>
          <?php if (($phpner_advanced_options_settings_data['allow_sku'] && $option['sku']) || ($phpner_advanced_options_settings_data['allow_model'] && $option['model'])) { ?>(<?php if ($phpner_advanced_options_settings_data['allow_sku'] && $option['sku']) { ?><?php echo $text_phpner_option_sku; ?>: <?php echo $option['sku']; ?>, <?php } ?><?php if ($phpner_advanced_options_settings_data['allow_model'] && $option['model']) { ?><?php echo $text_phpner_option_model; ?>: <?php echo $option['model']; ?><?php } ?>)
          <?php } ?>
          </small>
        <?php } else { ?>
        <small> - <?php echo $option['name']; ?>: <?php echo $option['value']; ?></small>
        <?php } ?>
      ]]></add>
    </operation>
  </file>
  <file path="admin/view/template/sale/order_shipping.tpl">
    <operation error="skip">
      <search><![CDATA[<small> - <?php echo $option['name']; ?>: <?php echo $option['value']; ?></small>]]></search>
      <add position="replace"><![CDATA[
        <?php if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) { ?>
          <small> - <?php echo $option['name']; ?>: <?php echo $option['value']; ?>
          <?php if ($option['type'] == 'phpner_quantity' && $phpner_advanced_options_settings_data['quantity_status'] && isset($option['phpner_quantity_value']) && $option['phpner_quantity_value']) { ?>
            x<?php echo $option['phpner_quantity_value']; ?>
          <?php } ?>
          <?php if (($phpner_advanced_options_settings_data['allow_sku'] && $option['sku']) || ($phpner_advanced_options_settings_data['allow_model'] && $option['model'])) { ?>(<?php if ($phpner_advanced_options_settings_data['allow_sku'] && $option['sku']) { ?><?php echo $text_phpner_option_sku; ?>: <?php echo $option['sku']; ?>, <?php } ?><?php if ($phpner_advanced_options_settings_data['allow_model'] && $option['model']) { ?><?php echo $text_phpner_option_model; ?>: <?php echo $option['model']; ?><?php } ?>)
          <?php } ?>
          </small>
        <?php } else { ?>
        <small> - <?php echo $option['name']; ?>: <?php echo $option['value']; ?></small>
        <?php } ?>
      ]]></add>
    </operation>
  </file>
  <!-- catalog actions -->
  <file path="system/library/cart/cart.php">
    <operation error="skip">
      <search><![CDATA[ pov.weight,]]></search>
      <add position="replace"><![CDATA[" . $phpner_sql_inner . "]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[if ($option_query->row['type'] == 'select' || $option_query->row['type'] == 'radio') {]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $phpner_advanced_options_settings_data = $this->config->get('phpner_advanced_options_settings_data');
        $phpner_sql_inner = "";
        if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) {
          if ($phpner_advanced_options_settings_data['allow_sku']) {
            $phpner_sql_inner .= "pov.sku, ";
          }
          if ($phpner_advanced_options_settings_data['allow_model']) {
            $phpner_sql_inner .= "pov.model, ";
          }
        }
        $phpner_sql_inner .= " pov.weight,";
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[foreach ($value as $product_option_value_id) {]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $phpner_advanced_options_settings_data = $this->config->get('phpner_advanced_options_settings_data');
        $phpner_sql_inner = "";
        if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) {
          if ($phpner_advanced_options_settings_data['allow_sku']) {
            $phpner_sql_inner .= "pov.sku, ";
          }
          if ($phpner_advanced_options_settings_data['allow_model']) {
            $phpner_sql_inner .= "pov.model, ";
          }
        }
        $phpner_sql_inner .= " pov.weight,";
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA['option_value_id'         => $option_value_query->row['option_value_id'],]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        'sku'     => (isset($option_value_query->row['sku'])) ? $option_value_query->row['sku'] : '',
        'model'   => (isset($option_value_query->row['model'])) ? $option_value_query->row['model'] : '',
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[} elseif ($option_query->row['type'] == 'text' || $option_query->row['type'] == 'textarea' || $option_query->row['type'] == 'file' || $option_query->row['type'] == 'date' || $option_query->row['type'] == 'datetime' || $option_query->row['type'] == 'time') {]]></search>
      <add position="before"><![CDATA[
        // phpner_advanced_options_settings start
        } elseif ($option_query->row['type'] == 'phpner_quantity' && is_array($value)) {
          foreach ($value as $product_option_value_id) {
            $phpner_advanced_options_settings_data = $this->config->get('phpner_advanced_options_settings_data');
            $phpner_sql_inner = "";
            if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) {
              if ($phpner_advanced_options_settings_data['allow_sku']) {
                $phpner_sql_inner .= "pov.sku, ";
              }
              if ($phpner_advanced_options_settings_data['allow_model']) {
                $phpner_sql_inner .= "pov.model, ";
              }
            }
            $phpner_sql_inner .= " pov.weight,";
            $product_option_value_id_data = explode("|", $product_option_value_id);
            $option_value_query = $this->db->query("SELECT pov.option_value_id, pov.quantity, pov.subtract, pov.price, pov.price_prefix, pov.points, pov.points_prefix, " . $phpner_sql_inner . " pov.weight_prefix, ovd.name FROM " . DB_PREFIX . "product_option_value pov LEFT JOIN " . DB_PREFIX . "option_value_description ovd ON (pov.option_value_id = ovd.option_value_id) WHERE pov.product_option_value_id = '" . (int)$product_option_value_id_data[0] . "' AND pov.product_option_id = '" . (int)$product_option_id . "' AND ovd.language_id = '" . (int)$this->config->get('config_language_id') . "'");
            if ($option_value_query->num_rows) {
              if ($option_value_query->row['price_prefix'] == '+') {
                $option_price += $option_value_query->row['price']*$product_option_value_id_data[1];
              } elseif ($option_value_query->row['price_prefix'] == '-') {
                $option_price -= $option_value_query->row['price']*$product_option_value_id_data[1];
              }
              if ($option_value_query->row['points_prefix'] == '+') {
                $option_points += $option_value_query->row['points']*$product_option_value_id_data[1];
              } elseif ($option_value_query->row['points_prefix'] == '-') {
                $option_points -= $option_value_query->row['points']*$product_option_value_id_data[1];
              }
              if ($option_value_query->row['weight_prefix'] == '+') {
                $option_weight += $option_value_query->row['weight']*$product_option_value_id_data[1];
              } elseif ($option_value_query->row['weight_prefix'] == '-') {
                $option_weight -= $option_value_query->row['weight']*$product_option_value_id_data[1];
              }
              if ($option_value_query->row['subtract'] && (!$option_value_query->row['quantity'] || ($option_value_query->row['quantity'] < $cart['quantity']))) {
                $stock = false;
              }
              $option_data[] = array(
                'product_option_id'       => $product_option_id,
                'sku'                     => (isset($option_value_query->row['sku'])) ? $option_value_query->row['sku'] : '',
                'model'                   => (isset($option_value_query->row['model'])) ? $option_value_query->row['model'] : '',
                'product_option_value_id' => $product_option_value_id,
                'option_id'               => $option_query->row['option_id'],
                'option_value_id'         => $option_value_query->row['option_value_id'],
                'name'                    => $option_query->row['name'],
                'value'                   => $option_value_query->row['name'],
                'type'                    => $option_query->row['type'],
                'quantity'                => $option_value_query->row['quantity'],
                'subtract'                => $option_value_query->row['subtract'],
                'price'                   => $option_value_query->row['price'],
                'price_prefix'            => $option_value_query->row['price_prefix'],
                'points'                  => $option_value_query->row['points'],
                'points_prefix'           => $option_value_query->row['points_prefix'],
                'weight'                  => $option_value_query->row['weight'],
                'weight_prefix'           => $option_value_query->row['weight_prefix'],
                'phpner_quantity_value'      => $product_option_value_id_data[1]
              );
            }
          }
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="catalog/controller/account/order.php">
    <operation error="skip">
      <search><![CDATA[$data['text_order_detail'] = $this->language->get('text_order_detail');]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $data['phpner_text_option_sku'] = $this->language->get('phpner_text_option_sku');
        $data['phpner_text_option_model'] = $this->language->get('phpner_text_option_model');
        $data['phpner_advanced_options_settings_data'] = $this->config->get('phpner_advanced_options_settings_data');
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$option_data[] = array(]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        'sku'  => $option['sku'],
        'model'  => $option['model'],
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="catalog/language/ru-ru/account/order.php">
    <operation error="skip">
      <search><![CDATA[<?php]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $_['phpner_text_option_sku'] = 'Артикул';
        $_['phpner_text_option_model'] = 'Модель';
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="catalog/controller/checkout/cart.php">
    <operation error="skip">
      <search><![CDATA[$data['button_checkout'] = $this->language->get('button_checkout');]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $data['phpner_text_option_sku'] = $this->language->get('phpner_text_option_sku');
        $data['phpner_text_option_model'] = $this->language->get('phpner_text_option_model');
        $data['phpner_advanced_options_settings_data'] = $this->config->get('phpner_advanced_options_settings_data');
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$option_data[] = array(]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        'sku'     => (isset($option['sku'])) ? $option['sku'] : '',
        'model'   => (isset($option['model'])) ? $option['model'] : '',
        'phpner_quantity_value'  => (isset($option['phpner_quantity_value'])) ? $option['phpner_quantity_value'] : '',
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="catalog/language/ru-ru/checkout/cart.php">
    <operation error="skip">
      <search><![CDATA[<?php]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $_['phpner_text_option_sku'] = 'Артикул';
        $_['phpner_text_option_model'] = 'Модель';
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="catalog/controller/product/product.php">
    <operation error="skip">
      <search><![CDATA[public function index() {]]></search>
      <add position="before"><![CDATA[
        public function update_prices() {
          if (isset($this->request->request['product_id']) && isset($this->request->request['quantity'])) {
            $this->load->model('catalog/product');
            $option_price    = 0;
            $product_id      = (int)$this->request->request['product_id'];
            $quantity        = (int)$this->request->request['quantity'];
            $product_info    = $this->model_catalog_product->getProduct($product_id);
            $product_options = $this->model_catalog_product->getProductOptions($product_id);
            if (!empty($this->request->request['option'])) {
              $options = $this->request->request['option'];
            } else {
              $options = array();
            }
            $options_arr = array();
            if ($options) {
              foreach ($options as $key => $option) {
                if (is_array($option)) {
                  foreach ($option as $option_value) {
                    $product_option_value_id_data = explode("|", $option_value);
                    if (isset($product_option_value_id_data[0]) && isset($product_option_value_id_data[1])) {
                      $options_arr[$key][$product_option_value_id_data[0]] = array(
                        'product_option_value_id' => $product_option_value_id_data[0],
                        'quantity' => $product_option_value_id_data[1]
                      );
                    }
                  }
                }
              }
            }
            foreach ($product_options as $product_option) {
              if (is_array($product_option['product_option_value'])) {
                foreach ($product_option['product_option_value'] as $option_value) {
                  if ($product_option['type'] == 'phpner_quantity') {
                    if (isset($options_arr[$product_option['product_option_id']][$option_value['product_option_value_id']])) {
                      if (($options_arr[$product_option['product_option_id']][$option_value['product_option_value_id']]['product_option_value_id'] == $option_value['product_option_value_id'])) {
                        $phpner_quantity = (isset($options_arr[$product_option['product_option_id']][$option_value['product_option_value_id']]['quantity'])) ? $options_arr[$product_option['product_option_id']][$option_value['product_option_value_id']]['quantity'] : 1;
                        if ($option_value['price_prefix'] == '+') {  
                          $option_price += $option_value['price'] * $phpner_quantity;
                        } elseif ($option_value['price_prefix'] == '-') { 
                          $option_price -= $option_value['price'] * $phpner_quantity;
                        }
                      }
                    }
                  } else {
                    if (isset($options[$product_option['product_option_id']])) {
                      if (($options[$product_option['product_option_id']] == $option_value['product_option_value_id']) || ((is_array($options[$product_option['product_option_id']])) && (in_array($option_value['product_option_value_id'], $options[$product_option['product_option_id']])))) {
                        if ($option_value['price_prefix'] == '+') {  
                          $option_price += $option_value['price']; 
                        } elseif ($option_value['price_prefix'] == '-') { 
                          $option_price -= $option_value['price']; 
                        }
                      }
                    }
                  }
                }
              }
            }
            $json = array();
            $json['special'] = $this->currency->format(($this->tax->calculate($this->get_price_discount($product_id, $quantity, 'special'), $product_info['tax_class_id'], $this->config->get('config_tax')) * $quantity) + $this->tax->calculate($option_price * $quantity, $product_info['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
            if ($json['special']) {
              $economy = round(((($this->tax->calculate($product_info['price'], $product_info['tax_class_id'], $this->config->get('config_tax')) * $quantity) - ($this->tax->calculate($this->get_price_discount($product_id, $quantity, 'special'), $product_info['tax_class_id'], $this->config->get('config_tax')) * $quantity))/(($this->tax->calculate($product_info['price'], $product_info['tax_class_id'], $this->config->get('config_tax')) * $quantity) + 0.01))*100, 0); 
              $saver = round(($this->tax->calculate($product_info['price'], $product_info['tax_class_id'], $this->config->get('config_tax'))) - ($this->tax->calculate($this->get_price_discount($product_id, $quantity, 'special'), $product_info['tax_class_id'], $this->config->get('config_tax'))));                  
              //$json['you_save'] = $this->currency->format(($this->tax->calculate($saver, $product_info['tax_class_id'], $this->config->get('config_tax')) * $quantity) + $this->tax->calculate($quantity * $product_info['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']) . ' (-'.$economy.'%)';
              $json['you_save'] = '-'.$economy.'%';
            } else {
              $json['you_save'] = false;
            }
            $json['price'] = $this->currency->format(($this->tax->calculate($this->get_price_discount($product_id, $quantity, 'price'), $product_info['tax_class_id'], $this->config->get('config_tax')) * $quantity) + $this->tax->calculate($option_price * $quantity, $product_info['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
            $json['tax'] = $this->currency->format(($this->get_price_discount($product_id, $quantity, 'price') + $option_price) * $quantity, $this->session->data['currency']);
          }
          $this->response->addHeader('Content-Type: application/json');
          $this->response->setOutput(json_encode($json));
        }
        public function get_price_discount($product_id, $quantity, $type) {
          $this->load->model('catalog/product');
          $customer_group_id = ($this->customer->isLogged()) ? (int)$this->customer->getGroupId() : (int)$this->config->get('config_customer_group_id');
          $product_info = (array)$this->model_catalog_product->getProduct($product_id);
          if ($type == 'price') {
            $product_discount_query = $this->db->query("SELECT price FROM " . DB_PREFIX . "product_discount WHERE product_id = '" . (int)$product_id . "' AND customer_group_id = '" . (int)$customer_group_id . "' AND quantity <= '" . (int)$quantity . "' AND ((date_start = '0000-00-00' OR date_start < NOW()) AND (date_end = '0000-00-00' OR date_end > NOW())) ORDER BY quantity DESC, priority ASC, price ASC LIMIT 1");
            if ($product_discount_query->row) {
                $price = $product_discount_query->row['price'];
            } else {
              $price = $product_info['price'];
            }
          }
          if ($type == 'special') {
            $product_special_query = $this->db->query("SELECT price FROM " . DB_PREFIX . "product_special WHERE product_id = '" . (int)$product_id . "' AND customer_group_id = '" . (int)$customer_group_id . "' AND ((date_start = '0000-00-00' OR date_start < NOW()) AND (date_end = '0000-00-00' OR date_end > NOW())) ORDER BY priority ASC, price ASC LIMIT 1");
            if ($product_special_query->row) {
              $price = $product_special_query->row['price'];
            } else {
              $price = $product_info['price'];
            }
          }
          return $price;
        }
     ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[public function index() {]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $phpner_advanced_options_settings_data = $this->config->get('phpner_advanced_options_settings_data');
        if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status'] && $phpner_advanced_options_settings_data['allow_zoom']) {
          $this->document->addStyle('catalog/view/theme/phpner_store_store/js/cloud-zoom/cloud-zoom.css');
          $this->document->addScript('catalog/view/theme/phpner_store_store/js/cloud-zoom/cloud-zoom.1.0.2.js');
        }
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[if ($product_info) {]]></search>
      <add position="before"><![CDATA[
        // phpner_advanced_options_settings start
        $data['text_col_option_name'] = $this->language->get('text_col_option_name');
        $data['text_col_option_image'] = $this->language->get('text_col_option_image');
        $data['text_col_option_sku'] = $this->language->get('text_col_option_sku');
        $data['text_col_option_model'] = $this->language->get('text_col_option_model');
        $data['text_col_option_price'] = $this->language->get('text_col_option_price');
        $data['text_col_option_quantity'] = $this->language->get('text_col_option_quantity');
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[if (!$option_value['subtract'] || ($option_value['quantity'] > 0)) {]]></search>
      <add position="replace"><![CDATA[
        // phpner_advanced_options_settings start
        if (!$option_value['subtract'] || ($option_value['quantity'] >= 0)) {
          // if (!$option_value['subtract'] || ($option_value['quantity'] > 0)) {
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$product_option_value_data[] = array(]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        'quantity_status'         => ($option_value['quantity'] <= 0) ? false : true,
        'sku'                     => (isset($option_value['sku']) && $option_value['sku']) ? $option_value['sku'] : ($product_info['sku'] ? $product_info['sku'] : ''),
        'model'                   => (isset($option_value['model']) && $option_value['model']) ? $option_value['model'] : $product_info['model'],
        'o_v_image'               => (isset($option_value['o_v_image']) && $option_value['o_v_image']) ? $this->model_tool_image->resize($option_value['o_v_image'], 50, 50) : $this->model_tool_image->resize("no_image.jpg", 50, 50),  
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$results = $this->model_catalog_product->getProductImages($this->request->get['product_id']);]]></search>
      <add position="replace" offset="8"><![CDATA[
        // phpner_advanced_options_settings start
        $data['phpner_advanced_options_settings_data'] = $phpner_advanced_options_settings_data = $this->config->get('phpner_advanced_options_settings_data');
        $data['check_zoom'] = isset($phpner_advanced_options_settings_data['allow_zoom']) ? $phpner_advanced_options_settings_data['allow_zoom'] : '0';
        if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) {
          $this->document->addScript('catalog/view/theme/phpner_store_store/js/jquery.magnify.js');
          $this->document->addStyle('catalog/view/theme/phpner_store_store/stylesheet/magnify.css');
          $results = $this->model_catalog_product->getProductImages($this->request->get['product_id']);
          $data['images'][] = array(
            'popup' => $this->model_tool_image->resize($product_info['image'], $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height')),
            'thumb' => $this->model_tool_image->resize($product_info['image'], $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height')),
            'main_img'   => $this->model_tool_image->resize($product_info['image'], $this->config->get($this->config->get('config_theme') . '_image_thumb_width'), $this->config->get($this->config->get('config_theme') . '_image_thumb_height')),
            'main_popup' => $this->model_tool_image->resize($product_info['image'], $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height'))
          );
          foreach ($results as $result) {
            $data['images'][] = array(
              'popup' => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height')),
              'thumb' => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height')),
              'main_img'   => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_thumb_width'), $this->config->get($this->config->get('config_theme') . '_image_thumb_height')),
              'main_popup' => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height'))
            );
          }
        } else {
          $results = $this->model_catalog_product->getProductImages($this->request->get['product_id']);
          $data['images'][] = array(
            'popup' => $this->model_tool_image->resize($product_info['image'], $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height')),
            'thumb' => $this->model_tool_image->resize($product_info['image'], $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height'))
          );
          foreach ($results as $result) {
            $data['images'][] = array(
              'popup' => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height')),
              'thumb' => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height'))
            );
          }
        }
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[public function index() {]]></search>
      <add position="before"><![CDATA[
        public function getPImages() {
          $json = array();
          $this->load->model('catalog/product');
          $this->load->model('tool/image');
          if (isset($this->request->get['product_id'])) {
            $product_id = $this->request->get['product_id'];
          } else {
            $product_id = 0;
          }
          $phpner_advanced_options_settings_data = $this->config->get('phpner_advanced_options_settings_data');
          $check_zoom = isset($phpner_advanced_options_settings_data['allow_zoom']) ? $phpner_advanced_options_settings_data['allow_zoom']: '0';
          $product_info = $this->model_catalog_product->getProduct($product_id);
          if (isset($this->request->post['option'])) {
            $opt_array = array();
            foreach ($this->request->post['option'] as $value) {
              if (is_array($value)) {
                foreach ($value as $val) {
                  if ($val) {
                    $opt_array[] = $this->model_catalog_product->getProductOptionValueId($this->request->get['product_id'], $val);
                  }
                }
              } else {
                if ($value) {
                  $opt_array[] = $this->model_catalog_product->getProductOptionValueId($this->request->get['product_id'], $value);
                }
              }
            }
            $results = $this->model_catalog_product->getProductImagesByOptionValueId($this->request->get['product_id'], $opt_array);
            foreach ($results as $result) {
              $json['images'][] = array(
                'popup' => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height')),
                'thumb' => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height')),
                'main_img'   => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_thumb_width'), $this->config->get($this->config->get('config_theme') . '_image_thumb_height')),
                'main_popup' => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height'))
              );
            }
          } else {
            $results = false;
          }
          if (!$results) {
            $results = $this->model_catalog_product->getProductImages($this->request->get['product_id']);
            $json['images'][] = array(
              'popup' => $this->model_tool_image->resize($product_info['image'], $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height')),
              'thumb' => $this->model_tool_image->resize($product_info['image'], $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height')),
              'main_img'   => $this->model_tool_image->resize($product_info['image'], $this->config->get($this->config->get('config_theme') . '_image_thumb_width'), $this->config->get($this->config->get('config_theme') . '_image_thumb_height')),
              'main_popup' => $this->model_tool_image->resize($product_info['image'], $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height'))
            );
            foreach ($results as $result) {
              $json['images'][] = array(
                'popup' => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height')),
                'thumb' => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_additional_width'), $this->config->get($this->config->get('config_theme') . '_image_additional_height')),
                'main_img'   => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_thumb_width'), $this->config->get($this->config->get('config_theme') . '_image_thumb_height')),
                'main_popup' => $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_popup_width'), $this->config->get($this->config->get('config_theme') . '_image_popup_height'))
              );
            }
          }
          $this->response->addHeader('Content-Type: application/json');
          $this->response->setOutput(json_encode($json));
        }
     ]]></add>
   </operation>    
  </file>
  <file path="catalog/language/ru-ru/product/product.php">
    <operation error="skip">
      <search><![CDATA[<?php]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $_['text_col_option_name'] = 'Значение';
        $_['text_col_option_image'] = 'Изображение';
        $_['text_col_option_sku'] = 'Артикул';
        $_['text_col_option_model'] = 'Модель';
        $_['text_col_option_price'] = 'Цена';
        $_['text_col_option_quantity'] = 'Кол-во';
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="catalog/controller/product/category.php">
    <operation error="skip">
      <search><![CDATA[$data['products'][] = array(]]></search>
      <add position="before"><![CDATA[
        // phpner_advanced_options_settings start
        $phpner_options = array();
        $phpner_advanced_options_settings_data = $this->config->get('phpner_advanced_options_settings_data');
        foreach ($this->model_catalog_product->getProductOptions($result['product_id']) as $option) {
          $product_option_value_data = array();
          if (isset($phpner_advanced_options_settings_data['allowed_options']) && (in_array($option['option_id'], $phpner_advanced_options_settings_data['allowed_options']))) {
            foreach ($option['product_option_value'] as $option_value) {
              if (!$option_value['subtract'] || ($option_value['quantity'] >= 0)) {
                if ((($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) && (float)$option_value['price']) {
                  $phpner_option_price = $this->currency->format($this->tax->calculate($option_value['price'], $result['tax_class_id'], $this->config->get('config_tax') ? 'P' : false), $this->session->data['currency']);
                } else {
                  $phpner_option_price = false;
                }
                $product_option_value_data[] = array(
                  'product_option_value_id' => $option_value['product_option_value_id'],
                  'option_value_id'         => $option_value['option_value_id'],
                  'name'                    => $option_value['name'],
                  'image'                   => $option_value['image'] ? $this->model_tool_image->resize($option_value['image'], 50, 50) : '',
                  'price'                   => $phpner_option_price,
                  'price_prefix'            => $option_value['price_prefix']
               );
              }
            }
            $phpner_options[] = array(
              'product_option_id'    => $option['product_option_id'],
              'product_option_value' => $product_option_value_data,
              'option_id'            => $option['option_id'],
              'name'                 => $option['name'],
              'type'                 => $option['type'],
              'value'                => $option['value'],
              'required'             => $option['required']
            );
          }
        }
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$data['products'][] = array(]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        'phpner_options' => $phpner_options,
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="catalog/controller/product/search.php">
    <operation error="skip">
      <search><![CDATA[$data['products'][] = array(]]></search>
      <add position="before"><![CDATA[
        // phpner_advanced_options_settings start
        $phpner_options = array();
        $phpner_advanced_options_settings_data = $this->config->get('phpner_advanced_options_settings_data');
        foreach ($this->model_catalog_product->getProductOptions($result['product_id']) as $option) {
          $product_option_value_data = array();
          if (isset($phpner_advanced_options_settings_data['allowed_options']) && (in_array($option['option_id'], $phpner_advanced_options_settings_data['allowed_options']))) {
            foreach ($option['product_option_value'] as $option_value) {
              if (!$option_value['subtract'] || ($option_value['quantity'] >= 0)) {
                if ((($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) && (float)$option_value['price']) {
                  $phpner_option_price = $this->currency->format($this->tax->calculate($option_value['price'], $result['tax_class_id'], $this->config->get('config_tax') ? 'P' : false), $this->session->data['currency']);
                } else {
                  $phpner_option_price = false;
                }
                $product_option_value_data[] = array(
                  'product_option_value_id' => $option_value['product_option_value_id'],
                  'option_value_id'         => $option_value['option_value_id'],
                  'name'                    => $option_value['name'],
                  'image'                   => $option_value['image'] ? $this->model_tool_image->resize($option_value['image'], 50, 50) : '',
                  'price'                   => $phpner_option_price,
                  'price_prefix'            => $option_value['price_prefix']
               );
              }
            }
            $phpner_options[] = array(
              'product_option_id'    => $option['product_option_id'],
              'product_option_value' => $product_option_value_data,
              'option_id'            => $option['option_id'],
              'name'                 => $option['name'],
              'type'                 => $option['type'],
              'value'                => $option['value'],
              'required'             => $option['required']
            );
          }
        }
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$data['products'][] = array(]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        'phpner_options' => $phpner_options,
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="catalog/controller/product/special.php">
    <operation error="skip">
      <search><![CDATA[$data['products'][] = array(]]></search>
      <add position="before"><![CDATA[
        // phpner_advanced_options_settings start
        $phpner_options = array();
        $phpner_advanced_options_settings_data = $this->config->get('phpner_advanced_options_settings_data');
        foreach ($this->model_catalog_product->getProductOptions($result['product_id']) as $option) {
          $product_option_value_data = array();
          if (isset($phpner_advanced_options_settings_data['allowed_options']) && (in_array($option['option_id'], $phpner_advanced_options_settings_data['allowed_options']))) {
            foreach ($option['product_option_value'] as $option_value) {
              if (!$option_value['subtract'] || ($option_value['quantity'] >= 0)) {
                if ((($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) && (float)$option_value['price']) {
                  $phpner_option_price = $this->currency->format($this->tax->calculate($option_value['price'], $result['tax_class_id'], $this->config->get('config_tax') ? 'P' : false), $this->session->data['currency']);
                } else {
                  $phpner_option_price = false;
                }
                $product_option_value_data[] = array(
                  'product_option_value_id' => $option_value['product_option_value_id'],
                  'option_value_id'         => $option_value['option_value_id'],
                  'name'                    => $option_value['name'],
                  'image'                   => $option_value['image'] ? $this->model_tool_image->resize($option_value['image'], 50, 50) : '',
                  'price'                   => $phpner_option_price,
                  'price_prefix'            => $option_value['price_prefix']
               );
              }
            }
            $phpner_options[] = array(
              'product_option_id'    => $option['product_option_id'],
              'product_option_value' => $product_option_value_data,
              'option_id'            => $option['option_id'],
              'name'                 => $option['name'],
              'type'                 => $option['type'],
              'value'                => $option['value'],
              'required'             => $option['required']
            );
          }
        }
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$data['products'][] = array(]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        'phpner_options' => $phpner_options,
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="catalog/controller/product/manufacturer.php">
    <operation error="skip">
      <search><![CDATA[$data['products'][] = array(]]></search>
      <add position="before"><![CDATA[
        // phpner_advanced_options_settings start
        $phpner_options = array();
        $phpner_advanced_options_settings_data = $this->config->get('phpner_advanced_options_settings_data');
        foreach ($this->model_catalog_product->getProductOptions($result['product_id']) as $option) {
          $product_option_value_data = array();
          if (isset($phpner_advanced_options_settings_data['allowed_options']) && (in_array($option['option_id'], $phpner_advanced_options_settings_data['allowed_options']))) {
            foreach ($option['product_option_value'] as $option_value) {
              if (!$option_value['subtract'] || ($option_value['quantity'] >= 0)) {
                if ((($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) && (float)$option_value['price']) {
                  $phpner_option_price = $this->currency->format($this->tax->calculate($option_value['price'], $result['tax_class_id'], $this->config->get('config_tax') ? 'P' : false), $this->session->data['currency']);
                } else {
                  $phpner_option_price = false;
                }
                $product_option_value_data[] = array(
                  'product_option_value_id' => $option_value['product_option_value_id'],
                  'option_value_id'         => $option_value['option_value_id'],
                  'name'                    => $option_value['name'],
                  'image'                   => $option_value['image'] ? $this->model_tool_image->resize($option_value['image'], 50, 50) : '',
                  'price'                   => $phpner_option_price,
                  'price_prefix'            => $option_value['price_prefix']
               );
              }
            }
            $phpner_options[] = array(
              'product_option_id'    => $option['product_option_id'],
              'product_option_value' => $product_option_value_data,
              'option_id'            => $option['option_id'],
              'name'                 => $option['name'],
              'type'                 => $option['type'],
              'value'                => $option['value'],
              'required'             => $option['required']
            );
          }
        }
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$data['products'][] = array(]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        'phpner_options' => $phpner_options,
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="catalog/model/catalog/product.php">
    <operation error="skip">
      <search><![CDATA[public function getProductImages($product_id) {]]></search>
      <add position="before"><![CDATA[
        // phpner_advanced_options_settings start
        public function getProductImagesByOptionValueId($product_id, $options) {
          $sql = "SELECT * FROM " . DB_PREFIX . "product_image pi LEFT JOIN " . DB_PREFIX . "phpner_product_image_by_option pito ON (pi.product_image_id = pito.product_image_id) WHERE pi.product_id = '" . (int)$product_id . "'";
          $implode = array();
          foreach ($options as $option) {
            if ($option) {
              $implode[] = $option;
            }
          }
          $sql .= " AND pito.option_value_id IN (" . implode(',', $implode) . ") GROUP BY pi.image ORDER BY pi.sort_order ASC";
          $query = $this->db->query($sql);
          return $query->rows;
        }
        public function getProductOptionValueId($product_id, $product_option_value_id) {
          $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_value WHERE product_id = '" . (int)$product_id . "' AND product_option_value_id = '" . (int)$product_option_value_id . "'");
          if ($query->row) {
            return $query->row['option_value_id'];
          }
        }
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$product_option_value_data[] = array(]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        'sku' => (isset($product_option_value['sku'])) ? $product_option_value['sku'] : '',
        'model' => (isset($product_option_value['model'])) ? $product_option_value['model'] : '',
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[public function getProductOptions($product_id) {]]></search>
      <add position="replace"><![CDATA[
        // phpner_advanced_options_settings start
        public function getProductOptions($product_id) {
          $phpner_advanced_options_settings_data = $this->config->get('phpner_advanced_options_settings_data');
          $product_option_data = array();
          $product_option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option po LEFT JOIN `" . DB_PREFIX . "option` o ON (po.option_id = o.option_id) LEFT JOIN " . DB_PREFIX . "option_description od ON (o.option_id = od.option_id) WHERE po.product_id = '" . (int)$product_id . "' AND od.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY o.sort_order");
          foreach ($product_option_query->rows as $product_option) {
            $product_option_value_data = array();
            if (isset($phpner_advanced_options_settings_data['status']) && $phpner_advanced_options_settings_data['status']) {
              if (!$phpner_advanced_options_settings_data['quantity_status'] && $product_option['type'] == 'phpner_quantity') {
              } else {
                $product_option_value_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_value pov LEFT JOIN " . DB_PREFIX . "option_value ov ON (pov.option_value_id = ov.option_value_id) LEFT JOIN " . DB_PREFIX . "option_value_description ovd ON (ov.option_value_id = ovd.option_value_id) WHERE pov.product_id = '" . (int)$product_id . "' AND pov.product_option_id = '" . (int)$product_option['product_option_id'] . "' AND ovd.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY ov.sort_order");
                foreach ($product_option_value_query->rows as $product_option_value) {
                  $product_option_value_data[] = array(
                    'product_option_value_id' => $product_option_value['product_option_value_id'],
                    'option_value_id'         => $product_option_value['option_value_id'],
                    'name'                    => $product_option_value['name'],
                    'image'                   => $product_option_value['image'],
                    'o_v_image'               => $product_option_value['o_v_image'],
                    'sku'                     => (isset($product_option_value['sku'])) ? $product_option_value['sku'] : '',
                    'model'                   => (isset($product_option_value['model'])) ? $product_option_value['model'] : '',
                    'quantity'                => $product_option_value['quantity'],
                    'subtract'                => $product_option_value['subtract'],
                    'price'                   => $product_option_value['price'],
                    'price_prefix'            => $product_option_value['price_prefix'],
                    'weight'                  => $product_option_value['weight'],
                    'weight_prefix'           => $product_option_value['weight_prefix']
                  );
                }
                $product_option_data[] = array(
                  'product_option_id'    => $product_option['product_option_id'],
                  'product_option_value' => $product_option_value_data,
                  'option_id'            => $product_option['option_id'],
                  'name'                 => $product_option['name'],
                  'type'                 => $product_option['type'],
                  'value'                => $product_option['value'],
                  'required'             => $product_option['required']
                );
              }
            } else {
              $product_option_value_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_value pov LEFT JOIN " . DB_PREFIX . "option_value ov ON (pov.option_value_id = ov.option_value_id) LEFT JOIN " . DB_PREFIX . "option_value_description ovd ON (ov.option_value_id = ovd.option_value_id) WHERE pov.product_id = '" . (int)$product_id . "' AND pov.product_option_id = '" . (int)$product_option['product_option_id'] . "' AND ovd.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY ov.sort_order");
              foreach ($product_option_value_query->rows as $product_option_value) {
                $product_option_value_data[] = array(
                  // phpner_advanced_options_settings start
                  'sku' => (isset($product_option_value['sku'])) ? $product_option_value['sku'] : '',
                  'model' => (isset($product_option_value['model'])) ? $product_option_value['model'] : '',
                  // phpner_advanced_options_settings end
                  'product_option_value_id' => $product_option_value['product_option_value_id'],
                  'option_value_id'         => $product_option_value['option_value_id'],
                  'name'                    => $product_option_value['name'],
                  'image'                   => $product_option_value['image'],
                  'quantity'                => $product_option_value['quantity'],
                  'subtract'                => $product_option_value['subtract'],
                  'price'                   => $product_option_value['price'],
                  'price_prefix'            => $product_option_value['price_prefix'],
                  'weight'                  => $product_option_value['weight'],
                  'weight_prefix'           => $product_option_value['weight_prefix']
                );
              }
              $product_option_data[] = array(
                'product_option_id'    => $product_option['product_option_id'],
                'product_option_value' => $product_option_value_data,
                'option_id'            => $product_option['option_id'],
                'name'                 => $product_option['name'],
                'type'                 => $product_option['type'],
                'value'                => $product_option['value'],
                'required'             => $product_option['required']
              );
            }
          }
          return $product_option_data;
        }
        // phpner_advanced_options_settings end
        public function getProductOptionsOld($product_id) {
      ]]></add>
    </operation>
  </file>
  <file path="catalog/model/checkout/order.php">
    <operation error="skip">
      <search><![CDATA[`type` = '" . $this->db->escape($option['type']) . "']]></search>
      <add position="replace"><![CDATA[`sku` = '" . $this->db->escape(isset($option['sku']) ? $option['sku'] : '') . "', `model` = '" . $this->db->escape(isset($option['model']) ? $option['model'] : '') . "', phpner_quantity_value = '" . (int)((isset($option['phpner_quantity_value'])) ? $option['phpner_quantity_value'] : 0) . "', `type` = '" . $this->db->escape($option['type']) . "']]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$data['title'] = sprintf($language->get('text_new_subject'), $order_info['store_name'], $order_id);]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $data['phpner_text_option_sku'] = $language->get('phpner_text_option_sku');
        $data['phpner_text_option_model'] = $language->get('phpner_text_option_model');
        $data['phpner_advanced_options_settings_data'] = $this->config->get('phpner_advanced_options_settings_data');
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$option_data[] = array(]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        'sku'                => (isset($option['sku'])) ? $option['sku'] : '',
        'model'              => (isset($option['model'])) ? $option['model'] : '',
        'type'               => $option['type'],
        'phpner_quantity_value' => (isset($option['phpner_quantity_value'])) ? $option['phpner_quantity_value'] : '',
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
  <file path="catalog/language/ru-ru/mail/order.php">
    <operation error="skip">
      <search><![CDATA[<?php]]></search>
      <add position="after"><![CDATA[
        // phpner_advanced_options_settings start
        $_['phpner_text_option_sku'] = 'Артикул';
        $_['phpner_text_option_model'] = 'Модель';
        // phpner_advanced_options_settings end
      ]]></add>
    </operation>
  </file>
</modification>
